{
  "version": 3,
  "sources": ["main.ts"],
  "sourcesContent": ["import { App, Editor, MarkdownView, Notice, Plugin, PluginSettingTab, Setting, TFolder, TFile, ItemView, WorkspaceLeaf } from 'obsidian';\n\ntype Lang = 'es' | 'en';\n\ninterface ElevenlabsVoice { voice_id: string; name: string }\n\ninterface ElevenlabsSettings {\n  apiKey: string;\n  voiceId: string;\n  modelId: string;\n  saveToVault: boolean;\n  outputFolder: string; // per-note subfolder (legacy/per-note mode)\n  // New: output location mode and global output folder\n  outputLocationMode?: 'global' | 'per-note';\n  globalOutputFolder?: string; // used when outputLocationMode === 'global'\n  historyLimit: number;\n  history: TTSHistoryEntry[];\n  language: Lang;\n  writeSidecar: boolean;\n  overlayEnabled: boolean;\n  stability: number; // 0..1\n  similarityBoost: number; // 0..1\n  style: number; // 0..100\n  useSpeakerBoost: boolean;\n  outputFormat: string;\n  voices: ElevenlabsVoice[];\n  voicesLastFetch?: number;\n  // New: control which voices to show in the dropdown\n  voicesFilter?: 'all' | 'userOnly';\n}\n\ninterface TTSHistoryEntry {\n  path: string;\n  createdAt: number;\n  sourceNotePath?: string;\n  textSnippet?: string;\n  fullText?: string;\n}\n\nconst I18N: Record<Lang, Record<string, string>> = {\n  es: {\n    'cmd.playSelection': 'Reproducir selecci\u00F3n con ElevenLabs',\n    'cmd.playParagraph': 'Reproducir p\u00E1rrafo actual con ElevenLabs',\n    'cmd.stop': 'Detener reproducci\u00F3n TTS',\n    'cmd.openPlayer': 'Abrir reproductor TTS',\n    'cmd.closePlayer': 'Cerrar reproductor TTS',\n    'cmd.toggleOverlay': 'Alternar overlay de palabras (karaoke)',\n    'cmd.preset.expressive': 'Ajustes r\u00E1pidos: Expresivo',\n    'cmd.preset.neutral': 'Ajustes r\u00E1pidos: Neutral',\n    'cmd.preset.narration': 'Ajustes r\u00E1pidos: Narraci\u00F3n',\n\n    'notice.configureKeys': 'Configura tu API Key y Voice ID de ElevenLabs en los ajustes del plugin.',\n    'notice.noText': 'No hay texto para reproducir.',\n    'notice.saveFail': 'No se pudo guardar el audio en el vault.',\n    'notice.fileNotFound': 'Archivo no encontrado en historial.',\n    'notice.errorPrefix': 'Error al generar audio: ',\n    'notice.overlayOn': 'Overlay activado',\n    'notice.overlayOff': 'Overlay desactivado',\n    'notice.voicesLoaded': 'Voces actualizadas',\n    'notice.voicesLoadError': 'Error al cargar voces',\n    'notice.presetApplied': 'Preset aplicado:',\n    'notice.entryDeleted': 'Entrada eliminada (archivos borrados)',\n    'notice.historyCleared': 'Historial limpiado (archivos borrados)',\n    'notice.deleteError': 'Error al eliminar archivos:',\n\n    'view.title': 'Reproductor TTS',\n\n    'controls.play': 'Reproducir',\n    'controls.pause': 'Pausar',\n    'controls.stop': 'Detener',\n    'controls.seek': 'Desplazar',\n    'controls.speed': 'Velocidad',\n    'controls.mute': 'Silenciar',\n\n    'history.title': 'Historial de generaciones',\n    'history.clear': 'Limpiar',\n    'history.empty': 'Sin entradas todav\u00EDa.',\n\n    'pending.generating': 'Generando audio\u2026',\n\n    'settings.title': 'Configuraci\u00F3n de ElevenLabs',\n    'settings.apiKey.name': 'API Key',\n    'settings.apiKey.desc': 'Clave de la API de ElevenLabs',\n    'settings.voiceId.name': 'Voice ID (manual)',\n    'settings.voiceId.desc': 'Introduce un Voice ID manualmente',\n    'settings.voices.name': 'Mis voces',\n    'settings.voices.desc': 'Selecciona una voz de tu cuenta',\n    'settings.voices.refresh': 'Actualizar voces',\n    'settings.voices.empty': 'No se han cargado voces todav\u00EDa',\n\n    'settings.model.name': 'Modelo',\n    'settings.model.desc': 'Modelo de ElevenLabs a usar',\n    'settings.save.name': 'Guardar audio en vault',\n    'settings.save.desc': 'Si est\u00E1 activo, guarda cada audio generado en la carpeta especificada (dentro de la carpeta de la nota actual)',\n    'settings.subfolder.name': 'Subcarpeta de salida',\n    'settings.subfolder.desc': 'Nombre de la subcarpeta dentro de la carpeta de la nota (por ejemplo, TTS)',\n    'settings.historyLimit.name': 'Historial: m\u00E1ximo elementos',\n    'settings.historyLimit.desc': 'L\u00EDmite de entradas guardadas en el historial de generaciones',\n    'settings.language.name': 'Idioma',\n    'settings.language.desc': 'Idioma de la interfaz del plugin',\n    'settings.sidecar.name': 'Guardar metadatos (sidecar .json)',\n    'settings.sidecar.desc': 'Escribe un archivo .json junto al MP3 con el texto, voz y modelo para reconstruir overlay.',\n    'settings.overlay.name': 'Mostrar overlay (karaoke)',\n    'settings.overlay.desc': 'Resalta palabra a palabra durante la reproducci\u00F3n en la vista TTS.',\n\n    'settings.voice.stability.name': 'Estabilidad',\n    'settings.voice.stability.desc': '0: muy expresivo, 1: m\u00E1s estable',\n    'settings.voice.similarity.name': 'Similitud',\n    'settings.voice.similarity.desc': '0: libre, 1: similar a la voz base',\n    'settings.voice.style.name': 'Estilo',\n    'settings.voice.style.desc': 'Mayor valor suele aportar m\u00E1s expresividad (0\u2013100)',\n    'settings.voice.boost.name': 'Speaker boost',\n    'settings.voice.boost.desc': 'Mejora la presencia/claridad de la voz',\n    'settings.outputFormat.name': 'Formato de salida',\n    'settings.outputFormat.desc': 'Formato/bitrate del audio generado'\n  },\n  en: {\n    'cmd.playSelection': 'Play selection with ElevenLabs',\n    'cmd.playParagraph': 'Play current paragraph with ElevenLabs',\n    'cmd.stop': 'Stop TTS Playback',\n    'cmd.openPlayer': 'Open TTS Player',\n    'cmd.closePlayer': 'Close TTS Player',\n    'cmd.toggleOverlay': 'Toggle word overlay (karaoke)',\n    'cmd.preset.expressive': 'Quick preset: Expressive',\n    'cmd.preset.neutral': 'Quick preset: Neutral',\n    'cmd.preset.narration': 'Quick preset: Narration',\n\n    'notice.configureKeys': 'Set your ElevenLabs API Key and Voice ID in the plugin settings.',\n    'notice.noText': 'No text to play.',\n    'notice.saveFail': 'Could not save audio to vault.',\n    'notice.fileNotFound': 'File not found in history.',\n    'notice.errorPrefix': 'Error generating audio: ',\n    'notice.overlayOn': 'Overlay enabled',\n    'notice.overlayOff': 'Overlay disabled',\n    'notice.voicesLoaded': 'Voices refreshed',\n    'notice.voicesLoadError': 'Failed to load voices',\n    'notice.presetApplied': 'Preset applied:',\n    'notice.entryDeleted': 'Entry deleted (files removed)',\n    'notice.historyCleared': 'History cleared (files removed)',\n    'notice.deleteError': 'Error deleting files:',\n\n    'view.title': 'TTS Player',\n\n    'controls.play': 'Play',\n    'controls.pause': 'Pause',\n    'controls.stop': 'Stop',\n    'controls.seek': 'Seek',\n    'controls.speed': 'Speed',\n    'controls.mute': 'Mute',\n\n    'history.title': 'Generations history',\n    'history.clear': 'Clear',\n    'history.empty': 'No entries yet.',\n\n    'pending.generating': 'Generating audio\u2026',\n\n    'settings.title': 'ElevenLabs Settings',\n    'settings.apiKey.name': 'API Key',\n    'settings.apiKey.desc': 'Your ElevenLabs API key',\n    'settings.voiceId.name': 'Voice ID (manual)',\n    'settings.voiceId.desc': 'Enter a Voice ID manually',\n    'settings.voices.name': 'My voices',\n    'settings.voices.desc': 'Select a voice from your account',\n    'settings.voices.refresh': 'Refresh voices',\n    'settings.voices.empty': 'No voices loaded yet',\n\n    'settings.model.name': 'Model',\n    'settings.model.desc': 'ElevenLabs model to use',\n    'settings.save.name': 'Save audio to vault',\n    'settings.save.desc': 'If enabled, saves each generated audio into the specified folder (inside the current note folder)',\n    'settings.subfolder.name': 'Output subfolder',\n    'settings.subfolder.desc': 'Subfolder name within the note folder (e.g., TTS)',\n    'settings.historyLimit.name': 'History: max items',\n    'settings.historyLimit.desc': 'Maximum number of entries to keep in history',\n    'settings.language.name': 'Language',\n    'settings.language.desc': 'Plugin interface language',\n    'settings.sidecar.name': 'Save metadata (sidecar .json)',\n    'settings.sidecar.desc': 'Writes a .json next to the MP3 with text, voice and model to rebuild overlay.',\n    'settings.overlay.name': 'Show overlay (karaoke)',\n    'settings.overlay.desc': 'Highlights word-by-word while playing in the TTS view.',\n\n    'settings.voice.stability.name': 'Stability',\n    'settings.voice.stability.desc': '0: very expressive, 1: more stable',\n    'settings.voice.similarity.name': 'Similarity boost',\n    'settings.voice.similarity.desc': '0: free, 1: closer to base voice',\n    'settings.voice.style.name': 'Style',\n    'settings.voice.style.desc': 'Higher often yields more expressiveness (0\u2013100)',\n    'settings.voice.boost.name': 'Speaker boost',\n    'settings.voice.boost.desc': 'Improves presence/clarity of the voice',\n    'settings.outputFormat.name': 'Output format',\n    'settings.outputFormat.desc': 'Generated audio format/bitrate'\n  }\n};\n\nconst DEFAULT_SETTINGS: ElevenlabsSettings = {\n  apiKey: '',\n  voiceId: '',\n  modelId: 'eleven_multilingual_v2',\n  saveToVault: false,\n  outputFolder: 'TTS',\n  outputLocationMode: 'global',\n  globalOutputFolder: 'TTS',\n  historyLimit: 50,\n  history: [],\n  language: 'es',\n  writeSidecar: true,\n  overlayEnabled: true,\n  stability: 0.5,\n  similarityBoost: 0.75,\n  style: 0,\n  useSpeakerBoost: true,\n  outputFormat: 'mp3_44100_128',\n  voices: [],\n  voicesFilter: 'userOnly',\n};\n\ninterface WordTiming { index: number; start: number; end: number; text: string; }\n\nconst VIEW_TYPE_TTS = 'elevenlabs-tts-player';\n\nexport default class ElevenLabsTTSPlugin extends Plugin {\n  settings!: ElevenlabsSettings;\n  private audioEl: HTMLAudioElement | null = null;\n  private overlay: TTSOverlay | null = null;\n  private playerView: TTSPlayerView | null = null;\n  private currentText: string = '';\n  private currentTokens: string[] = [];\n  private currentTimings: WordTiming[] = [];\n\n  t(key: string): string {\n    const lang = this.settings?.language ?? 'es';\n    return I18N[lang]?.[key] ?? I18N.en[key] ?? key;\n  }\n\n  async onload() {\n    await this.loadSettings();\n\n    // Quick access ribbon icon\n    this.addRibbonIcon('audio-file', this.t('cmd.openPlayer'), async () => {\n      await this.openPlayerView();\n    });\n\n    this.registerView(VIEW_TYPE_TTS, (leaf) => new TTSPlayerView(leaf, this));\n    this.addSettingTab(new TTSSettingTab(this.app, this));\n\n    this.addCommand({\n      id: 'tts-play-selection',\n      name: this.t('cmd.playSelection'),\n      editorCallback: async (editor: Editor) => {\n        const selection = editor.getSelection();\n        const text = selection || editor.getValue();\n        await this.playText(text);\n      },\n    });\n\n    this.addCommand({\n      id: 'tts-play-paragraph',\n      name: this.t('cmd.playParagraph'),\n      editorCallback: async (editor: Editor) => {\n        const para = this.extractCurrentParagraph(editor);\n        await this.playText(para);\n      },\n    });\n\n    this.addCommand({\n      id: 'tts-open-player',\n      name: this.t('cmd.openPlayer'),\n      callback: async () => { await this.openPlayerView(); },\n    });\n\n    this.addCommand({\n      id: 'tts-close-player',\n      name: this.t('cmd.closePlayer'),\n      callback: async () => {\n        this.app.workspace.getLeavesOfType(VIEW_TYPE_TTS).forEach((l) => l.detach());\n      },\n    });\n\n    this.addCommand({\n      id: 'tts-toggle-overlay',\n      name: this.t('cmd.toggleOverlay'),\n      callback: async () => {\n        this.settings.overlayEnabled = !this.settings.overlayEnabled;\n        await this.saveSettings();\n        new Notice(this.settings.overlayEnabled ? this.t('notice.overlayOn') : this.t('notice.overlayOff'));\n      },\n    });\n\n    this.addCommand({\n      id: 'tts-stop',\n      name: this.t('cmd.stop'),\n      callback: () => this.stopAndCleanup(),\n    });\n\n    // Preset commands\n    this.addCommand({\n      id: 'tts-preset-expressive',\n      name: this.t('cmd.preset.expressive'),\n      callback: async () => {\n        this.settings.stability = 0.25;\n        this.settings.similarityBoost = 0.6;\n        this.settings.style = 40;\n        this.settings.useSpeakerBoost = true;\n        await this.saveSettings();\n        new Notice(`${this.t('notice.presetApplied')} ${this.t('cmd.preset.expressive')}`);\n      }\n    });\n\n    this.addCommand({\n      id: 'tts-preset-neutral',\n      name: this.t('cmd.preset.neutral'),\n      callback: async () => {\n        this.settings.stability = 0.8;\n        this.settings.similarityBoost = 0.9;\n        this.settings.style = 5;\n        this.settings.useSpeakerBoost = true;\n        await this.saveSettings();\n        new Notice(`${this.t('notice.presetApplied')} ${this.t('cmd.preset.neutral')}`);\n      }\n    });\n\n    this.addCommand({\n      id: 'tts-preset-narration',\n      name: this.t('cmd.preset.narration'),\n      callback: async () => {\n        this.settings.stability = 0.6;\n        this.settings.similarityBoost = 0.8;\n        this.settings.style = 20;\n        this.settings.useSpeakerBoost = true;\n        await this.saveSettings();\n        new Notice(`${this.t('notice.presetApplied')} ${this.t('cmd.preset.narration')}`);\n      }\n    });\n\n    // Context menu: only three items\n    this.registerEvent(\n      this.app.workspace.on('editor-menu', (menu, editor, view) => {\n        const sel = editor.getSelection()?.trim() ?? '';\n        if (sel.length > 0) {\n          menu.addItem((item) =>\n            item.setTitle(this.t('cmd.playSelection')).onClick(async () => {\n              await this.playText(sel);\n            })\n          );\n        }\n        menu.addItem((item) =>\n          item.setTitle(this.t('cmd.playParagraph')).onClick(async () => {\n            const para = this.extractCurrentParagraph(editor);\n            await this.playText(para);\n          })\n        );\n        menu.addItem((item) =>\n          item.setTitle(this.t('cmd.closePlayer')).onClick(async () => {\n            this.app.workspace.getLeavesOfType(VIEW_TYPE_TTS).forEach((l) => l.detach());\n          })\n        );\n      })\n    );\n\n    // Reabrir la vista al abrir un MP3 generado\n    this.registerEvent(\n      this.app.workspace.on('file-open', async (file) => {\n        if (file instanceof TFile && file.extension.toLowerCase() === 'mp3') {\n          const found = this.settings.history.find((h) => h.path === file.path);\n          const isGenerated = !!found || file.path.includes(`/${this.settings.outputFolder}/`);\n          if (isGenerated) {\n            let entry = found;\n            if (!entry) {\n              const basename = file.path.split('/').pop() ?? file.path;\n              entry = {\n                path: file.path,\n                createdAt: (file.stat?.ctime ?? Date.now()),\n                textSnippet: basename,\n              };\n              // intentar sidecar para enriquecer\n              const sidecar = await this.readSidecar(file.path);\n              if (sidecar) {\n                entry.fullText = sidecar.fullText ?? entry.fullText;\n                entry.textSnippet = sidecar.textSnippet ?? entry.textSnippet;\n                entry.sourceNotePath = sidecar.sourceNotePath ?? entry.sourceNotePath;\n              }\n              this.trackHistory(entry);\n            }\n            await this.playHistory(entry!);\n          }\n        }\n      })\n    );\n  }\n\n  onunload() {\n    this.stopAndCleanup();\n    this.app.workspace.getLeavesOfType(VIEW_TYPE_TTS).forEach((l) => l.detach());\n  }\n\n  private extractCurrentParagraph(editor: Editor): string {\n    const pos = editor.getCursor();\n    const total = editor.lineCount();\n    let start = pos.line;\n    let end = pos.line;\n    const isEmpty = (l: number) => editor.getLine(l).trim().length === 0;\n    while (start > 0 && !isEmpty(start - 1)) start--;\n    while (end < total - 1 && !isEmpty(end + 1)) end++;\n    const lines: string[] = [];\n    for (let i = start; i <= end; i++) lines.push(editor.getLine(i));\n    const text = lines.join('\\n').trim();\n    return text.length > 0 ? text : editor.getLine(pos.line);\n  }\n\n  private async playText(text: string) {\n    if (!this.settings.apiKey || !this.settings.voiceId) {\n      new Notice(this.t('notice.configureKeys'));\n      return;\n    }\n    if (!text || !text.trim()) {\n      new Notice(this.t('notice.noText'));\n      return;\n    }\n    if (!this.settings.voiceId.trim()) {\n      new Notice(this.t('notice.configureKeys'));\n      return;\n    }\n\n    // Abrir vista y mostrar pendiente\n    const view = await this.openPlayerView();\n    const snippet = (text.trim().split(/\\n+/)[0] || text).slice(0, 140);\n    view.showPendingGeneration(snippet, this.t('pending.generating'));\n    // Ensure pending row is shown right below header while loading\n    view.renderHistory(this.settings.history, {\n      onPlayFromHistory: (e) => this.playHistory(e),\n      onClearHistory: () => this.clearHistory(),\n      onDeleteHistory: (e) => this.deleteHistoryEntry(e),\n    });\n\n    try {\n      // Solicitar TTS\n      const { blob, audioUrl } = await convertTextToSpeech(text, this.settings);\n\n      // Guardar si est\u00E1 habilitado\n      if (this.settings.saveToVault) {\n        try {\n          const arrayBuffer = await blob.arrayBuffer();\n          const fileName = `${this.formatTimestamp(new Date())}.mp3`;\n          const savedPath = await this.saveAudioToVault(fileName, arrayBuffer);\n          const entry: TTSHistoryEntry = {\n            path: savedPath,\n            createdAt: Date.now(),\n            sourceNotePath: this.app.workspace.getActiveFile()?.path,\n            textSnippet: snippet,\n            fullText: text.slice(0, 100000),\n          };\n          this.trackHistory(entry);\n          if (this.settings.writeSidecar) {\n            const stability = Math.max(0, Math.min(1, this.settings.stability));\n            const similarity_boost = Math.max(0, Math.min(1, this.settings.similarityBoost));\n            const style = Math.max(0, Math.min(100, this.settings.style)) / 100;\n            await this.writeSidecar(savedPath, {\n              path: savedPath,\n              createdAt: entry.createdAt,\n              sourceNotePath: entry.sourceNotePath,\n              textSnippet: entry.textSnippet,\n              fullText: entry.fullText,\n              model_id: this.settings.modelId,\n              voice_id: this.settings.voiceId,\n              language: this.settings.language,\n              voice_settings: {\n                stability,\n                similarity_boost,\n                style,\n                use_speaker_boost: !!this.settings.useSpeakerBoost\n              },\n              output_format: this.settings.outputFormat,\n            });\n          }\n        } catch (e: any) {\n          console.error(e);\n          new Notice(this.t('notice.saveFail'));\n        }\n      }\n\n      // Preparar audio y UI\n      this.stopAndCleanup();\n      this.currentText = text;\n      this.setAudio(new Audio(audioUrl));\n\n      this.bindPlayerView(view);\n\n      // Overlay dentro de la vista\n      if (this.settings.overlayEnabled) {\n        this.overlay = new TTSOverlay(view.getOverlayContainer());\n        this.currentTokens = this.overlay.tokenize(text);\n        this.overlay.build(this.currentTokens);\n        this.overlay.onWordClick = (index) => {\n          const timing = this.currentTimings.find((t) => t.index === index);\n          if (timing && this.audioEl) {\n            this.audioEl.currentTime = timing.start + 0.01;\n            if (this.audioEl.paused) this.audioEl.play();\n          }\n        };\n\n        this.audioEl!.addEventListener('loadedmetadata', () => {\n          // Timings aproximados (si no hay alignment del API)\n          this.currentTimings = buildApproxTimings(this.currentTokens, this.audioEl!.duration);\n        });\n\n        this.audioEl!.addEventListener('timeupdate', () => {\n          if (this.overlay && this.currentTimings.length) {\n            this.overlay.highlightAtTime(this.currentTimings, this.audioEl!.currentTime);\n          }\n          view.updateTime(this.audioEl!);\n        });\n      } else {\n        this.audioEl!.addEventListener('timeupdate', () => view.updateTime(this.audioEl!));\n      }\n\n      this.audioEl!.addEventListener('ended', () => view.onEnded());\n\n      await this.audioEl!.play();\n    } catch (err: any) {\n      console.error(err);\n      new Notice(this.t('notice.errorPrefix') + (err?.message ?? String(err)));\n    } finally {\n      // Ocultar pendiente\n      const v = this.playerView ?? view;\n      v?.clearPendingGeneration();\n    }\n  }\n\n  private setAudio(audio: HTMLAudioElement) {\n    if (this.audioEl) {\n      try { this.audioEl.pause(); } catch {}\n      try { URL.revokeObjectURL(this.audioEl.src); } catch {}\n    }\n    this.audioEl = audio;\n  }\n\n  private async openPlayerView(): Promise<TTSPlayerView> {\n    const existing = this.app.workspace.getLeavesOfType(VIEW_TYPE_TTS)[0];\n    if (existing) {\n      await this.app.workspace.revealLeaf(existing);\n      this.playerView = existing.view as unknown as TTSPlayerView;\n      this.playerView.renderHistory(this.settings.history, {\n        onPlayFromHistory: (e) => this.playHistory(e),\n        onClearHistory: () => this.clearHistory(),\n        onDeleteHistory: (e) => this.deleteHistoryEntry(e),\n      });\n      return this.playerView;\n    }\n    const right = this.app.workspace.getRightLeaf(false) ?? this.app.workspace.getLeaf(true);\n    await right.setViewState({ type: VIEW_TYPE_TTS, active: true });\n    this.playerView = right.view as unknown as TTSPlayerView;\n    this.playerView.renderHistory(this.settings.history, {\n      onPlayFromHistory: (e) => this.playHistory(e),\n      onClearHistory: () => this.clearHistory(),\n      onDeleteHistory: (e) => this.deleteHistoryEntry(e),\n    });\n    return this.playerView;\n  }\n\n  private bindPlayerView(view: TTSPlayerView) {\n    if (!this.audioEl) return;\n    view.bindToAudio(this.audioEl, {\n      onPlay: () => this.audioEl!.play(),\n      onPause: () => this.audioEl!.pause(),\n      onStop: () => { this.audioEl!.pause(); this.audioEl!.currentTime = 0; },\n      onSeek: (p) => { if (this.audioEl!.duration) this.audioEl!.currentTime = p * this.audioEl!.duration; },\n      onRate: (r) => { this.audioEl!.playbackRate = r; },\n      onMute: () => { this.audioEl!.muted = !this.audioEl!.muted; },\n      onClose: () => this.stopAndCleanup(),\n      onPlayFromHistory: async (entry) => { await this.playHistory(entry); },\n      onClearHistory: async () => { await this.clearHistory(); },\n      onDeleteHistory: async (entry) => { await this.deleteHistoryEntry(entry); },\n      labels: {\n        play: this.t('controls.play'),\n        pause: this.t('controls.pause'),\n        stop: this.t('controls.stop'),\n        seek: this.t('controls.seek'),\n        speed: this.t('controls.speed'),\n        mute: this.t('controls.mute'),\n      }\n    });\n  }\n\n  private async saveAudioToVault(filename: string, arrayBuffer: ArrayBuffer): Promise<string> {\n    // New: support global output folder or per-note subfolder\n    const folderPath = await this.getOutputFolderForSave();\n    const existing = this.app.vault.getAbstractFileByPath(folderPath);\n    if (!(existing instanceof TFolder)) {\n      await this.app.vault.createFolder(folderPath);\n    }\n    const filePath = `${folderPath}/${filename}`;\n    await this.app.vault.createBinary(filePath, arrayBuffer);\n    return filePath;\n  }\n\n  private async getOutputFolderForSave(): Promise<string> {\n    const mode = this.settings.outputLocationMode ?? 'global';\n    if (mode === 'per-note') {\n      const active = this.app.workspace.getActiveFile();\n      const parentPath = active?.parent?.path ?? '';\n      return parentPath ? `${parentPath}/${this.settings.outputFolder}` : this.settings.outputFolder;\n    }\n    // global mode: vault-root relative path\n    return (this.settings.globalOutputFolder?.trim() || 'TTS');\n  }\n\n  private jsonPathForAudio(audioPath: string): string {\n    if (audioPath.toLowerCase().endsWith('.mp3')) return audioPath.slice(0, -4) + '.json';\n    return audioPath + '.json';\n  }\n\n  private async writeSidecar(audioPath: string, metadata: Record<string, any>) {\n    const jsonPath = this.jsonPathForAudio(audioPath);\n    const existing = this.app.vault.getAbstractFileByPath(jsonPath);\n    const data = JSON.stringify(metadata, null, 2);\n    if (existing instanceof TFile) {\n      await this.app.vault.modify(existing, data);\n    } else {\n      await this.app.vault.create(jsonPath, data);\n    }\n  }\n\n  private async readSidecar(audioPath: string): Promise<any | null> {\n    const jsonPath = this.jsonPathForAudio(audioPath);\n    const existing = this.app.vault.getAbstractFileByPath(jsonPath);\n    if (existing instanceof TFile) {\n      try {\n        const raw = await this.app.vault.read(existing);\n        return JSON.parse(raw);\n      } catch (e) {\n        console.warn('Failed to read sidecar JSON', e);\n        return null;\n      }\n    }\n    return null;\n  }\n\n  private async getTextForHistoryEntry(entry: TTSHistoryEntry): Promise<string | null> {\n    if (entry.fullText && entry.fullText.trim().length > 0) return entry.fullText;\n    // intentar sidecar\n    const sidecar = await this.readSidecar(entry.path);\n    if (sidecar && sidecar.fullText) return sidecar.fullText as string;\n    if (entry.sourceNotePath) {\n      const af = this.app.vault.getAbstractFileByPath(entry.sourceNotePath);\n      if (af instanceof TFile) {\n        try { return await this.app.vault.read(af); } catch {}\n      }\n    }\n    return null;\n  }\n\n  async playHistory(entry: TTSHistoryEntry) {\n    const af = this.app.vault.getAbstractFileByPath(entry.path);\n    if (!(af instanceof TFile)) {\n      new Notice(this.t('notice.fileNotFound'));\n      return;\n    }\n    const data = await this.app.vault.readBinary(af);\n    this.stopAndCleanup();\n    const blob = new Blob([data], { type: 'audio/mpeg' });\n    const url = URL.createObjectURL(blob);\n    this.setAudio(new Audio(url));\n    const view = await this.openPlayerView();\n    this.bindPlayerView(view);\n\n    // Reconstruir overlay a partir de texto persistido o nota origen\n    const text = await this.getTextForHistoryEntry(entry);\n    if (text && text.trim().length > 0 && this.settings.overlayEnabled) {\n      this.overlay = new TTSOverlay(view.getOverlayContainer());\n      this.currentTokens = this.overlay.tokenize(text);\n      this.overlay.build(this.currentTokens);\n      this.overlay.onWordClick = (index) => {\n        const timing = this.currentTimings.find((t) => t.index === index);\n        if (timing && this.audioEl) {\n          this.audioEl.currentTime = timing.start + 0.01;\n          if (this.audioEl.paused) this.audioEl.play();\n        }\n      };\n      this.audioEl!.addEventListener('loadedmetadata', () => {\n        this.currentTimings = buildApproxTimings(this.currentTokens, this.audioEl!.duration);\n      });\n      this.audioEl!.addEventListener('timeupdate', () => {\n        if (this.overlay && this.currentTimings.length) {\n          this.overlay.highlightAtTime(this.currentTimings, this.audioEl!.currentTime);\n        }\n        view.updateTime(this.audioEl!);\n      });\n    } else {\n      this.audioEl!.addEventListener('timeupdate', () => view.updateTime(this.audioEl!));\n    }\n\n    await this.audioEl!.play();\n  }\n\n  trackHistory(entry: TTSHistoryEntry) {\n    const normalized: TTSHistoryEntry = {\n      ...entry,\n      textSnippet: entry.textSnippet && entry.textSnippet.trim().length > 0\n        ? entry.textSnippet\n        : (entry.path.split('/').pop() ?? entry.path),\n    };\n    const hist = [normalized, ...this.settings.history].slice(0, Math.max(1, this.settings.historyLimit));\n    this.settings.history = hist;\n    this.saveSettings();\n    // Persist global index with all generations\n    this.writeGlobalIndex().catch(console.warn);\n    if (this.playerView) this.playerView.renderHistory(this.settings.history, {\n      onPlayFromHistory: (e) => this.playHistory(e),\n      onClearHistory: () => this.clearHistory(),\n      onDeleteHistory: (e) => this.deleteHistoryEntry(e),\n    });\n  }\n\n  async clearHistory() {\n    // Eliminar archivos f\u00EDsicos de todas las entradas\n    const deletePromises = this.settings.history.map(async (entry) => {\n      try {\n        // Eliminar archivo de audio\n        const audioFile = this.app.vault.getAbstractFileByPath(entry.path);\n        if (audioFile instanceof TFile) {\n          await this.app.vault.delete(audioFile);\n        }\n        \n        // Eliminar archivo sidecar JSON si existe\n        const sidecarPath = this.jsonPathForAudio(entry.path);\n        const sidecarFile = this.app.vault.getAbstractFileByPath(sidecarPath);\n        if (sidecarFile instanceof TFile) {\n          await this.app.vault.delete(sidecarFile);\n        }\n      } catch (e) {\n        console.warn(`Error deleting files for entry ${entry.path}:`, e);\n      }\n    });\n\n    // Esperar a que se eliminen todos los archivos (en paralelo)\n    await Promise.all(deletePromises);\n\n    // Limpiar historial\n    this.settings.history = [];\n    await this.saveSettings();\n    await this.writeGlobalIndex().catch(console.warn);\n    \n    // Notificar \u00E9xito\n    new Notice(this.t('notice.historyCleared'));\n    \n    if (this.playerView) this.playerView.renderHistory(this.settings.history, {\n      onPlayFromHistory: (e) => this.playHistory(e),\n      onClearHistory: () => this.clearHistory(),\n      onDeleteHistory: (e) => this.deleteHistoryEntry(e),\n    });\n  }\n\n  async deleteHistoryEntry(entry: TTSHistoryEntry) {\n    // Eliminar archivos f\u00EDsicos primero\n    try {\n      // Eliminar archivo de audio\n      const audioFile = this.app.vault.getAbstractFileByPath(entry.path);\n      if (audioFile instanceof TFile) {\n        await this.app.vault.delete(audioFile);\n      }\n      \n      // Eliminar archivo sidecar JSON si existe\n      const sidecarPath = this.jsonPathForAudio(entry.path);\n      const sidecarFile = this.app.vault.getAbstractFileByPath(sidecarPath);\n      if (sidecarFile instanceof TFile) {\n        await this.app.vault.delete(sidecarFile);\n      }\n    } catch (e: any) {\n      console.warn('Error deleting files for history entry:', e);\n      new Notice(`${this.t('notice.deleteError')} ${e?.message ?? String(e)}`);\n      // Continuar con la eliminaci\u00F3n del historial aunque falle el borrado de archivos\n    }\n\n    // Eliminar entrada del historial\n    const byPath = (a: TTSHistoryEntry, b: TTSHistoryEntry) => a.path === b.path;\n    this.settings.history = this.settings.history.filter((e) => !byPath(e, entry));\n    await this.saveSettings();\n    await this.writeGlobalIndex().catch(console.warn);\n    \n    // Notificar \u00E9xito\n    new Notice(this.t('notice.entryDeleted'));\n    \n    if (this.playerView) this.playerView.renderHistory(this.settings.history, {\n      onPlayFromHistory: (e) => this.playHistory(e),\n      onClearHistory: () => this.clearHistory(),\n      onDeleteHistory: (e) => this.deleteHistoryEntry(e),\n    });\n  }\n\n  private async writeGlobalIndex() {\n    try {\n      const folder = this.settings.globalOutputFolder?.trim() || 'TTS';\n      const indexPath = `${folder}/index.json`;\n      // Ensure folder exists\n      const existingFolder = this.app.vault.getAbstractFileByPath(folder);\n      if (!(existingFolder instanceof TFolder)) {\n        await this.app.vault.createFolder(folder);\n      }\n      const payload = JSON.stringify({ updatedAt: Date.now(), entries: this.settings.history }, null, 2);\n      const existing = this.app.vault.getAbstractFileByPath(indexPath);\n      if (existing instanceof TFile) {\n        await this.app.vault.modify(existing, payload);\n      } else {\n        await this.app.vault.create(indexPath, payload);\n      }\n    } catch (e) {\n      console.warn('Failed to write global TTS index', e);\n    }\n  }\n\n  stopAndCleanup() {\n    if (this.audioEl) {\n      try { this.audioEl.pause(); } catch {}\n      try { URL.revokeObjectURL(this.audioEl.src); } catch {}\n      this.audioEl = null;\n    }\n    if (this.overlay) { this.overlay.destroy(); this.overlay = null; }\n    this.currentText = '';\n    this.currentTokens = [];\n    this.currentTimings = [];\n    // Mantener la vista abierta; el usuario puede cerrarla si quiere\n  }\n\n  private formatTimestamp(d: Date): string {\n    const pad = (n: number) => n.toString().padStart(2, '0');\n    return (\n      d.getFullYear().toString() +\n      pad(d.getMonth() + 1) +\n      pad(d.getDate()) +\n      pad(d.getHours()) +\n      pad(d.getMinutes()) +\n      pad(d.getSeconds())\n    );\n  }\n\n  async loadSettings() {\n    const data = await this.loadData();\n    this.settings = Object.assign({}, DEFAULT_SETTINGS, data);\n    // Normalizar historial (rellenar snippets vac\u00EDos)\n    if (!Array.isArray(this.settings.history)) this.settings.history = [];\n    this.settings.history = this.settings.history.map((e) => ({\n      ...e,\n      textSnippet: e.textSnippet && e.textSnippet.trim().length > 0\n        ? e.textSnippet\n        : (e.path?.split('/').pop() ?? e.path ?? ''),\n    }));\n    if (typeof this.settings.historyLimit !== 'number') this.settings.historyLimit = 50;\n    if (this.settings.language !== 'es' && this.settings.language !== 'en') this.settings.language = 'es';\n    if (typeof this.settings.writeSidecar !== 'boolean') this.settings.writeSidecar = true;\n    if (typeof this.settings.overlayEnabled !== 'boolean') this.settings.overlayEnabled = true;\n    if (typeof this.settings.stability !== 'number') this.settings.stability = DEFAULT_SETTINGS.stability;\n    if (typeof this.settings.similarityBoost !== 'number') this.settings.similarityBoost = DEFAULT_SETTINGS.similarityBoost;\n    if (typeof this.settings.style !== 'number') this.settings.style = DEFAULT_SETTINGS.style;\n    if (typeof this.settings.useSpeakerBoost !== 'boolean') this.settings.useSpeakerBoost = DEFAULT_SETTINGS.useSpeakerBoost;\n    if (typeof this.settings.outputFormat !== 'string') this.settings.outputFormat = DEFAULT_SETTINGS.outputFormat;\n    if (!Array.isArray(this.settings.voices)) this.settings.voices = [];\n    if (this.settings.outputLocationMode !== 'global' && this.settings.outputLocationMode !== 'per-note') this.settings.outputLocationMode = DEFAULT_SETTINGS.outputLocationMode;\n    if (!this.settings.globalOutputFolder || typeof this.settings.globalOutputFolder !== 'string') this.settings.globalOutputFolder = DEFAULT_SETTINGS.globalOutputFolder;\n    if (this.settings.voicesFilter !== 'all' && this.settings.voicesFilter !== 'userOnly') this.settings.voicesFilter = DEFAULT_SETTINGS.voicesFilter;\n  }\n\n  async saveSettings() {\n    await this.saveData(this.settings);\n  }\n\n  async refreshVoices() {\n    if (!this.settings.apiKey) {\n      new Notice(this.t('notice.configureKeys'));\n      return;\n    }\n    try {\n      const res = await fetch('https://api.elevenlabs.io/v1/voices', {\n        headers: { 'xi-api-key': this.settings.apiKey },\n      });\n      if (!res.ok) throw new Error(`${res.status} ${res.statusText}`);\n      const data = await res.json();\n      // Filter voices if requested: try to exclude premade/professional voices\n      let rawVoices: any[] = Array.isArray(data?.voices) ? data.voices : [];\n      if (this.settings.voicesFilter === 'userOnly') {\n        rawVoices = rawVoices.filter((v: any) => {\n          const category = String(v?.category ?? '');\n          return category ? (category !== 'premade' && category !== 'professional') : true;\n        });\n      }\n      const voices: ElevenlabsVoice[] = rawVoices.map((v: any) => ({ voice_id: String(v?.voice_id ?? v?.voiceId ?? ''), name: String(v?.name ?? '') }));\n      this.settings.voices = voices.filter(v => v.voice_id && v.name);\n      this.settings.voicesLastFetch = Date.now();\n      await this.saveSettings();\n      new Notice(this.t('notice.voicesLoaded'));\n    } catch (e) {\n      console.error(e);\n      new Notice(this.t('notice.voicesLoadError'));\n    }\n  }\n}\n\nclass TTSSettingTab extends PluginSettingTab {\n  plugin: ElevenLabsTTSPlugin;\n\n  constructor(app: App, plugin: ElevenLabsTTSPlugin) {\n    super(app, plugin);\n    this.plugin = plugin;\n  }\n\n  display(): void {\n    const { containerEl } = this;\n    containerEl.empty();\n\n    containerEl.createEl('h2', { text: this.plugin.t('settings.title') });\n\n    new Setting(containerEl)\n      .setName(this.plugin.t('settings.apiKey.name'))\n      .setDesc(this.plugin.t('settings.apiKey.desc'))\n      .addText((text) =>\n        text\n          .setPlaceholder('')\n          .setValue(this.plugin.settings.apiKey)\n          .onChange(async (value) => {\n            this.plugin.settings.apiKey = value.trim();\n            await this.plugin.saveSettings();\n          })\n      );\n\n    // Voices dropdown + refresh\n    const voicesSetting = new Setting(containerEl)\n      .setName(this.plugin.t('settings.voices.name'))\n      .setDesc(this.plugin.t('settings.voices.desc'));\n\n    voicesSetting.addDropdown((drop) => {\n      const options: Record<string, string> = {};\n      if (this.plugin.settings.voices.length === 0) {\n        options[''] = this.plugin.t('settings.voices.empty');\n      } else {\n        for (const v of this.plugin.settings.voices) {\n          options[v.voice_id] = `${v.name} (${v.voice_id.slice(0, 6)}\u2026)`;\n        }\n      }\n      drop.addOptions(options)\n        .setValue(this.plugin.settings.voiceId || '')\n        .onChange(async (value) => {\n          if (!value) return; // ignore empty placeholder\n          this.plugin.settings.voiceId = value;\n          await this.plugin.saveSettings();\n        });\n    });\n\n    voicesSetting.addButton((btn) =>\n      btn.setButtonText(this.plugin.t('settings.voices.refresh')).onClick(async () => {\n        await this.plugin.refreshVoices();\n        this.display();\n      })\n    );\n\n    new Setting(containerEl)\n      .setName(this.plugin.t('settings.voiceId.name'))\n      .setDesc(this.plugin.t('settings.voiceId.desc'))\n      .addText((text) =>\n        text\n          .setPlaceholder('')\n          .setValue(this.plugin.settings.voiceId)\n          .onChange(async (value) => {\n            this.plugin.settings.voiceId = value.trim();\n            await this.plugin.saveSettings();\n          })\n      );\n\n    new Setting(containerEl)\n      .setName(this.plugin.t('settings.model.name'))\n      .setDesc(this.plugin.t('settings.model.desc'))\n      .addDropdown((drop) =>\n        drop\n          .addOptions({\n            eleven_multilingual_v2: 'Multilingual v2',\n            eleven_flash_v2_5: 'Flash v2.5',\n            eleven_turbo_v2_5: 'Turbo v2.5',\n          })\n          .setValue(this.plugin.settings.modelId)\n          .onChange(async (value) => {\n            this.plugin.settings.modelId = value as string;\n            await this.plugin.saveSettings();\n          })\n      );\n\n    // Voice settings group\n    new Setting(containerEl)\n      .setName(this.plugin.t('settings.voice.stability.name'))\n      .setDesc(this.plugin.t('settings.voice.stability.desc'))\n      .addSlider((slider) =>\n        slider.setLimits(0, 1, 0.05)\n          .setValue(this.plugin.settings.stability)\n          .onChange(async (v) => { this.plugin.settings.stability = v; await this.plugin.saveSettings(); })\n      );\n\n    new Setting(containerEl)\n      .setName(this.plugin.t('settings.voice.similarity.name'))\n      .setDesc(this.plugin.t('settings.voice.similarity.desc'))\n      .addSlider((slider) =>\n        slider.setLimits(0, 1, 0.05)\n          .setValue(this.plugin.settings.similarityBoost)\n          .onChange(async (v) => { this.plugin.settings.similarityBoost = v; await this.plugin.saveSettings(); })\n      );\n\n    new Setting(containerEl)\n      .setName(this.plugin.t('settings.voice.style.name'))\n      .setDesc(this.plugin.t('settings.voice.style.desc'))\n      .addSlider((slider) =>\n        slider.setLimits(0, 100, 1)\n          .setValue(this.plugin.settings.style)\n          .onChange(async (v) => { this.plugin.settings.style = v; await this.plugin.saveSettings(); })\n      );\n\n    new Setting(containerEl)\n      .setName(this.plugin.t('settings.voice.boost.name'))\n      .setDesc(this.plugin.t('settings.voice.boost.desc'))\n      .addToggle((toggle) => toggle\n        .setValue(this.plugin.settings.useSpeakerBoost)\n        .onChange(async (v) => { this.plugin.settings.useSpeakerBoost = v; await this.plugin.saveSettings(); })\n      );\n\n    new Setting(containerEl)\n      .setName(this.plugin.t('settings.outputFormat.name'))\n      .setDesc(this.plugin.t('settings.outputFormat.desc'))\n      .addDropdown((drop) => drop\n        .addOptions({\n          mp3_44100_128: 'mp3 44.1kHz 128kbps',\n          mp3_44100_192: 'mp3 44.1kHz 192kbps',\n          mp3_44100_320: 'mp3 44.1kHz 320kbps',\n          wav: 'WAV',\n          pcm_16000: 'PCM 16kHz',\n        })\n        .setValue(this.plugin.settings.outputFormat)\n        .onChange(async (v) => { this.plugin.settings.outputFormat = v; await this.plugin.saveSettings(); })\n      );\n\n    new Setting(containerEl)\n      .setName(this.plugin.t('settings.save.name'))\n      .setDesc(this.plugin.t('settings.save.desc'))\n      .addToggle((toggle) =>\n        toggle.setValue(this.plugin.settings.saveToVault).onChange(async (value) => {\n          this.plugin.settings.saveToVault = value;\n          await this.plugin.saveSettings();\n        })\n      );\n\n    // Output location mode\n    new Setting(containerEl)\n      .setName('Output location')\n      .setDesc('Choose where generated audio files are saved')\n      .addDropdown((drop) => drop\n        .addOptions({ global: 'Global (vault root folder)', 'per-note': 'Per-note subfolder' })\n        .setValue(this.plugin.settings.outputLocationMode || 'global')\n        .onChange(async (v) => { this.plugin.settings.outputLocationMode = (v as 'global' | 'per-note'); await this.plugin.saveSettings(); })\n      );\n\n    new Setting(containerEl)\n      .setName('Global output folder')\n      .setDesc('Vault-root relative folder for TTS files (used in Global mode). E.g., TTS or Media/TTS')\n      .addText((text) =>\n        text\n          .setPlaceholder('TTS')\n          .setValue(this.plugin.settings.globalOutputFolder || 'TTS')\n          .onChange(async (value) => {\n            this.plugin.settings.globalOutputFolder = value.trim() || 'TTS';\n            await this.plugin.saveSettings();\n          })\n      );\n\n    new Setting(containerEl)\n      .setName(this.plugin.t('settings.subfolder.name'))\n      .setDesc(this.plugin.t('settings.subfolder.desc'))\n      .addText((text) =>\n        text\n          .setPlaceholder('TTS')\n          .setValue(this.plugin.settings.outputFolder)\n          .onChange(async (value) => {\n            this.plugin.settings.outputFolder = value.trim() || 'TTS';\n            await this.plugin.saveSettings();\n          })\n      );\n\n    new Setting(containerEl)\n      .setName(this.plugin.t('settings.historyLimit.name'))\n      .setDesc(this.plugin.t('settings.historyLimit.desc'))\n      .addText((text) =>\n        text\n          .setPlaceholder('50')\n          .setValue(String(this.plugin.settings.historyLimit))\n          .onChange(async (value) => {\n            const n = Number(value);\n            this.plugin.settings.historyLimit = Number.isFinite(n) && n > 0 ? Math.floor(n) : 50;\n            await this.plugin.saveSettings();\n          })\n      );\n\n    // Voices filter\n    new Setting(containerEl)\n      .setName('Voices filter')\n      .setDesc('Show all voices or only your voices (excludes premade/professional when possible)')\n      .addDropdown((drop) => drop\n        .addOptions({ userOnly: 'Only my voices', all: 'All voices' })\n        .setValue(this.plugin.settings.voicesFilter || 'userOnly')\n        .onChange(async (v) => { this.plugin.settings.voicesFilter = (v as 'all' | 'userOnly'); await this.plugin.saveSettings(); })\n      );\n\n    new Setting(containerEl)\n      .setName(this.plugin.t('settings.language.name'))\n      .setDesc(this.plugin.t('settings.language.desc'))\n      .addDropdown((drop) =>\n        drop\n          .addOptions({ es: 'Espa\u00F1ol', en: 'English' })\n          .setValue(this.plugin.settings.language)\n          .onChange(async (value) => {\n            this.plugin.settings.language = (value as Lang);\n            await this.plugin.saveSettings();\n            this.display();\n          })\n      );\n\n    new Setting(containerEl)\n      .setName(this.plugin.t('settings.sidecar.name'))\n      .setDesc(this.plugin.t('settings.sidecar.desc'))\n      .addToggle((toggle) =>\n        toggle.setValue(this.plugin.settings.writeSidecar).onChange(async (value) => {\n          this.plugin.settings.writeSidecar = value;\n          await this.plugin.saveSettings();\n        })\n      );\n\n    new Setting(containerEl)\n      .setName(this.plugin.t('settings.overlay.name'))\n      .setDesc(this.plugin.t('settings.overlay.desc'))\n      .addToggle((toggle) =>\n        toggle.setValue(this.plugin.settings.overlayEnabled).onChange(async (value) => {\n          this.plugin.settings.overlayEnabled = value;\n          await this.plugin.saveSettings();\n        })\n      );\n  }\n}\n\nasync function convertTextToSpeech(text: string, settings: ElevenlabsSettings) {\n  const url = `https://api.elevenlabs.io/v1/text-to-speech/${settings.voiceId}`;\n  const stability = Math.max(0, Math.min(1, settings.stability));\n  const similarity_boost = Math.max(0, Math.min(1, settings.similarityBoost));\n  const style = Math.max(0, Math.min(100, settings.style)) / 100; // API expects 0..1\n  const use_speaker_boost = !!settings.useSpeakerBoost;\n  const body = {\n    text,\n    model_id: settings.modelId,\n    output_format: settings.outputFormat,\n    voice_settings: {\n      stability,\n      similarity_boost,\n      style,\n      use_speaker_boost,\n    },\n  } as Record<string, any>;\n\n  const accept = body.output_format?.startsWith('mp3')\n    ? 'audio/mpeg'\n    : (body.output_format === 'wav' ? 'audio/wav' : 'application/octet-stream');\n\n  // Timeout protection\n  const controller = new AbortController();\n  const timeoutMs = 30000;\n  const timeoutId = setTimeout(() => controller.abort(), timeoutMs);\n\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': accept,\n      'xi-api-key': settings.apiKey,\n    },\n    body: JSON.stringify(body),\n    signal: controller.signal,\n  });\n  clearTimeout(timeoutId);\n\n  if (!response.ok) {\n    let errorText = '';\n    try { errorText = await response.text(); } catch {}\n    throw new Error(`HTTP ${response.status}: ${response.statusText}${errorText ? `\\n${errorText}` : ''}`);\n  }\n\n  const arrayBuffer = await response.arrayBuffer();\n  const blob = new Blob([arrayBuffer], { type: accept });\n  const audioUrl = URL.createObjectURL(blob);\n  return { blob, audioUrl };\n}\n\nclass TTSOverlay {\n  private root: HTMLElement | null;\n  onWordClick?: (index: number) => void;\n\n  constructor(root?: HTMLElement) {\n    this.root = root ?? null;\n  }\n\n  mount(container: HTMLElement) { this.root = container; }\n  destroy() { if (this.root) this.root.innerHTML = ''; }\n\n  tokenize(text: string): string[] {\n    return text.match(/\\w+|[^\\w\\s]+|\\s+/g) || [];\n  }\n\n  build(tokens: string[]) {\n    if (!this.root) return;\n    this.root.innerHTML = '';\n    const frag = document.createDocumentFragment();\n    tokens.forEach((tok, i) => {\n      if (/^\\w+$/.test(tok)) {\n        const span = document.createElement('span');\n        span.className = 'tts-word';\n        span.dataset.index = String(i);\n        span.textContent = tok;\n        frag.appendChild(span);\n      } else {\n        frag.appendChild(document.createTextNode(tok));\n      }\n    });\n    this.root.appendChild(frag);\n\n    this.root.addEventListener('click', (ev) => {\n      const target = ev.target as HTMLElement | null;\n      if (!target) return;\n      const el = target.closest('.tts-word') as HTMLElement | null;\n      if (el && el.dataset.index) {\n        const idx = Number(el.dataset.index);\n        this.onWordClick?.(idx);\n      }\n    });\n  }\n\n  highlightAtTime(timings: WordTiming[], t: number) {\n    if (!this.root || !timings.length) return;\n    // binary search\n    let lo = 0, hi = timings.length - 1, mid = 0, curr = -1;\n    while (lo <= hi) {\n      mid = (lo + hi) >> 1;\n      const w = timings[mid];\n      if (t < w.start) hi = mid - 1; else if (t > w.end) lo = mid + 1; else { curr = mid; break; }\n    }\n    const prev = this.root.querySelector('.tts-current');\n    if (prev) prev.classList.remove('tts-current');\n    const idx = curr >= 0 ? timings[curr].index : -1;\n    if (idx >= 0) {\n      const el = this.root.querySelector(`.tts-word[data-index=\"${idx}\"]`);\n      if (el) {\n        el.classList.add('tts-current');\n        (el as HTMLElement).scrollIntoView({ block: 'nearest', inline: 'nearest' });\n      }\n    }\n  }\n}\n\nfunction buildApproxTimings(tokens: string[], audioDuration: number): WordTiming[] {\n  const wordIdxs = tokens.map((t, i) => (/^\\w+$/.test(t) ? i : -1)).filter(i => i >= 0);\n  const totalChars = wordIdxs.reduce((acc, i) => acc + tokens[i].length, 0) || 1;\n  let accTime = 0;\n  return wordIdxs.map((i) => {\n    const frac = tokens[i].length / totalChars;\n    const dur = audioDuration * frac;\n    const wt: WordTiming = { index: i, start: accTime, end: accTime + dur, text: tokens[i] };\n    accTime += dur;\n    return wt;\n  });\n}\n\nclass TTSPlayerView extends ItemView {\n  private plugin: ElevenLabsTTSPlugin;\n  private overlayContainer!: HTMLDivElement;\n  private controls!: HTMLDivElement;\n  private historyContainer!: HTMLDivElement;\n  private pendingEl: HTMLDivElement | null = null;\n  private playBtn!: HTMLButtonElement;\n  private pauseBtn!: HTMLButtonElement;\n  private stopBtn!: HTMLButtonElement;\n  private seek!: HTMLInputElement;\n  private rate!: HTMLSelectElement;\n  private mute!: HTMLButtonElement;\n\n  constructor(leaf: WorkspaceLeaf, plugin: ElevenLabsTTSPlugin) {\n    super(leaf);\n    this.plugin = plugin;\n  }\n\n  getViewType(): string { return VIEW_TYPE_TTS; }\n  getDisplayText(): string { return this.plugin.t('view.title'); }\n  getIcon(): string { return 'audio-file'; }\n\n  async onOpen() {\n    const container = this.containerEl.children[1] as HTMLElement; // contentEl\n    container.empty();\n\n    this.controls = container.createDiv({ cls: 'tts-controls' });\n    this.controls.innerHTML = `\n      <div class=\"controls-row\">\n        <button data-act=\"play\" aria-label=\"${this.plugin.t('controls.play')}\">\u25B6</button>\n        <button data-act=\"pause\" aria-label=\"${this.plugin.t('controls.pause')}\">\u23F8</button>\n        <button data-act=\"stop\" aria-label=\"${this.plugin.t('controls.stop')}\">\u23F9</button>\n        <input type=\"range\" min=\"0\" max=\"100\" value=\"0\" step=\"0.1\" data-act=\"seek\" aria-label=\"${this.plugin.t('controls.seek')}\" />\n        <select data-act=\"rate\" aria-label=\"${this.plugin.t('controls.speed')}\">\n          <option value=\"0.75\">0.75x</option>\n          <option value=\"1\" selected>1.0x</option>\n          <option value=\"1.25\">1.25x</option>\n          <option value=\"1.5\">1.5x</option>\n        </select>\n        <button data-act=\"mute\" aria-label=\"${this.plugin.t('controls.mute')}\">\uD83D\uDD07</button>\n      </div>\n    `;\n\n    this.playBtn = this.controls.querySelector('[data-act=\"play\"]')!;\n    this.pauseBtn = this.controls.querySelector('[data-act=\"pause\"]')!;\n    this.stopBtn = this.controls.querySelector('[data-act=\"stop\"]')!;\n    this.seek = this.controls.querySelector('[data-act=\"seek\"]')! as HTMLInputElement;\n    this.rate = this.controls.querySelector('[data-act=\"rate\"]')! as HTMLSelectElement;\n    this.mute = this.controls.querySelector('[data-act=\"mute\"]')! as HTMLButtonElement;\n\n    this.overlayContainer = container.createDiv({ cls: 'tts-overlay' });\n\n    this.historyContainer = container.createDiv({ cls: 'tts-history' });\n    // Render con handlers para permitir reproducci\u00F3n incluso sin audio asociado a\u00FAn\n    this.renderHistory(this.plugin.settings.history, {\n      onPlayFromHistory: (e) => this.plugin.playHistory(e),\n      onClearHistory: () => this.plugin.clearHistory(),\n      onDeleteHistory: (e) => this.plugin.deleteHistoryEntry(e),\n    });\n\n    // Si ya hay audio activo, re-vincular\n    if ((this.plugin as any)['audioEl']) {\n      this.bindToAudio((this.plugin as any)['audioEl'] as HTMLAudioElement, {\n        onPlay: () => (this.plugin as any)['audioEl'].play(),\n        onPause: () => (this.plugin as any)['audioEl'].pause(),\n        onStop: () => { (this.plugin as any)['audioEl'].pause(); (this.plugin as any)['audioEl'].currentTime = 0; },\n        onSeek: (p: number) => { const a = (this.plugin as any)['audioEl'] as HTMLAudioElement; if (a.duration) a.currentTime = p * a.duration; },\n        onRate: (r: number) => { (this.plugin as any)['audioEl'].playbackRate = r; },\n        onMute: () => { (this.plugin as any)['audioEl'].muted = !(this.plugin as any)['audioEl'].muted; },\n        onClose: () => this.plugin.stopAndCleanup(),\n        onPlayFromHistory: (e) => this.plugin.playHistory(e),\n        onClearHistory: () => this.plugin.clearHistory(),\n        onDeleteHistory: (e) => this.plugin.deleteHistoryEntry(e),\n        labels: {\n          play: this.plugin.t('controls.play'),\n          pause: this.plugin.t('controls.pause'),\n          stop: this.plugin.t('controls.stop'),\n          seek: this.plugin.t('controls.seek'),\n          speed: this.plugin.t('controls.speed'),\n          mute: this.plugin.t('controls.mute'),\n        }\n      });\n    }\n  }\n\n  async onClose() {}\n\n  getOverlayContainer() { return this.overlayContainer; }\n\n  showPendingGeneration(snippet: string, generatingText: string) {\n    if (!this.historyContainer) return;\n    this.clearPendingGeneration();\n    // Build pending element detached, then insert below header\n    this.pendingEl = document.createElement('div');\n    this.pendingEl.addClass('tts-pending');\n    const row = this.pendingEl.createDiv({ cls: 'row' });\n    const left = row.createDiv({ cls: 'left' });\n    const right = row.createDiv({ cls: 'right' });\n    left.createEl('div', { cls: 'snippet', text: snippet });\n    left.createEl('div', { cls: 'meta', text: generatingText });\n    right.createDiv({ cls: 'spinner' });\n    const header = this.historyContainer.querySelector('.tts-history-header');\n    if (header && header.parentElement === this.historyContainer) {\n      this.historyContainer.insertBefore(this.pendingEl, header.nextSibling);\n    } else {\n      this.historyContainer.insertBefore(this.pendingEl, this.historyContainer.firstChild);\n    }\n  }\n\n  clearPendingGeneration() {\n    if (this.pendingEl) { this.pendingEl.remove(); this.pendingEl = null; }\n  }\n\n  bindToAudio(audio: HTMLAudioElement, handlers: {\n    onPlay: () => void;\n    onPause: () => void;\n    onStop: () => void;\n    onSeek: (p: number) => void;\n    onRate: (r: number) => void;\n    onMute: () => void;\n    onClose: () => void;\n    onPlayFromHistory: (entry: TTSHistoryEntry) => void | Promise<void>;\n    onClearHistory: () => void | Promise<void>;\n    labels?: { play: string; pause: string; stop: string; seek: string; speed: string; mute: string };\n    onDeleteHistory?: (entry: TTSHistoryEntry) => void | Promise<void>;\n  }) {\n    this.playBtn.onclick = handlers.onPlay;\n    this.pauseBtn.onclick = handlers.onPause;\n    this.stopBtn.onclick = handlers.onStop;\n    this.seek.oninput = () => {\n      if (audio.duration) handlers.onSeek(+this.seek.value / 100);\n    };\n    this.rate.onchange = () => handlers.onRate(parseFloat(this.rate.value));\n    this.mute.onclick = handlers.onMute;\n\n    if (handlers.labels) {\n      this.playBtn.setAttr('aria-label', handlers.labels.play);\n      this.pauseBtn.setAttr('aria-label', handlers.labels.pause);\n      this.stopBtn.setAttr('aria-label', handlers.labels.stop);\n      this.seek.setAttr('aria-label', handlers.labels.seek);\n      this.rate.setAttr('aria-label', handlers.labels.speed);\n      this.mute.setAttr('aria-label', handlers.labels.mute);\n    }\n\n    audio.addEventListener('timeupdate', () => this.updateTime(audio));\n\n    // Re-render history controls with handlers\n    this.renderHistory(this.plugin.settings.history, handlers);\n  }\n\n  renderHistory(entries: TTSHistoryEntry[], handlers?: { onPlayFromHistory: (entry: TTSHistoryEntry) => void | Promise<void>; onClearHistory: () => void | Promise<void>; onDeleteHistory?: (entry: TTSHistoryEntry) => void | Promise<void> }) {\n    if (!this.historyContainer) return;\n    this.historyContainer.empty();\n\n    const header = this.historyContainer.createDiv({ cls: 'tts-history-header' });\n    header.createEl('h4', { text: this.plugin.t('history.title') });\n    const actions = header.createDiv({ cls: 'tts-history-actions' });\n    const clearBtn = actions.createEl('button', { text: this.plugin.t('history.clear') });\n    clearBtn.onclick = () => handlers?.onClearHistory?.();\n\n    // Insert pending row right after header if present\n    if (this.pendingEl) {\n      this.historyContainer.insertBefore(this.pendingEl, header.nextSibling);\n    }\n\n    if (!entries.length) {\n      this.historyContainer.createDiv({ text: this.plugin.t('history.empty') });\n      return;\n    }\n\n    const list = this.historyContainer.createEl('ul', { cls: 'tts-history-list' });\n    entries.forEach((e) => {\n      const li = list.createEl('li', { cls: 'tts-history-item' });\n      const row = li.createDiv({ cls: 'row' });\n      const left = row.createDiv({ cls: 'left' });\n      const right = row.createDiv({ cls: 'right' });\n      const snippet = (e.textSnippet && e.textSnippet.trim().length > 0) ? e.textSnippet : (e.path.split('/').pop() ?? e.path);\n      left.createEl('div', { cls: 'snippet', text: snippet });\n      left.createEl('div', { cls: 'meta', text: `${new Date(e.createdAt).toLocaleString()} \u2022 ${e.sourceNotePath ?? ''}` });\n      const play = right.createEl('button', { text: '\u25B6', attr: { 'aria-label': this.plugin.t('controls.play') } });\n      play.onclick = () => handlers?.onPlayFromHistory?.(e);\n      const del = right.createEl('button', { text: '\u2715', attr: { 'aria-label': 'Delete' } });\n      del.onclick = () => handlers?.onDeleteHistory?.(e);\n    });\n  }\n\n  updateTime(audio: HTMLAudioElement) {\n    if (audio.duration) this.seek.value = String((audio.currentTime / audio.duration) * 100);\n  }\n\n  onEnded() {\n    this.seek.value = '0';\n  }\n} "],
  "mappings": "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",
  "names": []
}
